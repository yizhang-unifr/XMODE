HumanMessage: calculate the century by dividing the max_year by 100 and taking the ceiling of the result.:
```py
>>> print(max_year[:10])
0    2000
1    1879
Name: max_year, dtype: int64
```
It is a pandas Series object. Please call the 'apply' method with a lambda expression, and make sure to always call astype() in the same line. Assign the result to a variable called 'newest_century'. Template to use: `newest_century = max_year.apply(lambda x: <code>).astype(<dtype>)`. You can use pandas, datetime, numpy, re.
************************************************************************************************************************************************************************************************************************************************************************************************************
To calculate the century for each year in the `max_year` pandas Series, you can use the `apply` method with a lambda function that divides the year by 100 and takes the ceiling of the result. The `astype` method can be used to ensure the result is of integer type. Here's how you can do it:

```python
import numpy as np

newest_century = max_year.apply(lambda x: np.ceil(x / 100)).astype(int)
```

This code uses `numpy.ceil` to compute the ceiling of the division result, ensuring that the century is correctly calculated, and then converts the result to an integer type using `astype(int)`.
